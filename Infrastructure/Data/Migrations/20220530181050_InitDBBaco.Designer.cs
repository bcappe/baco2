// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220530181050_InitDBBaco")]
    partial class InitDBBaco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Core.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FingerPrintUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobContractType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("RfidCode")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartedIn")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkDayScheduleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkDayScheduleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Core.Entities.WorkDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("date");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("ExtraHours")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("LunchTimeIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LunchTimeOut")
                        .HasColumnType("date");

                    b.Property<float>("WorkDayDuration")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("Core.Entities.WorkDaySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CheckIn")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOut")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("LunchTimeIn")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("LunchTimeOut")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("WorkDayDuration")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WorkDaySchedules");
                });

            modelBuilder.Entity("Core.Entities.Employee", b =>
                {
                    b.HasOne("Core.Entities.WorkDaySchedule", "WorkDaySchedule")
                        .WithMany()
                        .HasForeignKey("WorkDayScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkDaySchedule");
                });

            modelBuilder.Entity("Core.Entities.WorkDay", b =>
                {
                    b.HasOne("Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
